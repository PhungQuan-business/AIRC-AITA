import psycopg2
import csv

DB_PARAMS = {
    'host': '192.168.88.146',
    'database': 'formatted-zone',
    'user': 'airc',
    'password': 'admin',
    'port': '5432'  # default PostgreSQL port
}

# C·∫•u h√¨nh PostgreSQL
conn = psycopg2.connect(**DB_PARAMS)
cur = conn.cursor()

# ƒê∆∞·ªùng d·∫´n file CSV
csv_file_path = '/opt/airflow/data/cleaned_canada.csv'

# H√†m ki·ªÉm tra b·∫£ng c√≥ t·ªìn t·∫°i kh√¥ng
def table_exists(table_name):
    cur.execute("""
        SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name = %s
        );
    """, (table_name,))
    return cur.fetchone()[0]

# H√†m nh·∫≠p d·ªØ li·ªáu v√†o PostgreSQL
def import_csv_to_postgres(table_name):
    try:
        # Ki·ªÉm tra b·∫£ng c√≥ t·ªìn t·∫°i kh√¥ng, n·∫øu kh√¥ng th√¨ t·∫°o m·ªõi
        if table_exists(table_name):
            cur.execute(f"DELETE FROM {table_name};")
            print(f"üóëÔ∏è D·ªØ li·ªáu c≈© trong b·∫£ng '{table_name}' ƒë√£ ƒë∆∞·ª£c x√≥a.")
        else:
            print(f"‚ö†Ô∏è B·∫£ng '{table_name}' ch∆∞a t·ªìn t·∫°i. S·∫Ω t·∫°o m·ªõi.")

        # ƒê·ªçc v√† l√†m s·∫°ch d·ªØ li·ªáu CSV
        with open(csv_file_path, mode='r') as file:
            reader = csv.DictReader(file)
            data = list(reader)

        if len(data) == 0:
            print('‚ö†Ô∏è File CSV r·ªóng.')
            return

        # L·∫•y danh s√°ch c·ªôt t·ª´ CSV
        columns = data[0].keys()

        # T·∫°o b·∫£ng n·∫øu ch∆∞a c√≥
        create_table_query = f"""
            CREATE TABLE IF NOT EXISTS {table_name} (
                id SERIAL PRIMARY KEY,
                {', '.join([f'"{col}" TEXT' for col in columns])}
            );
        """
        cur.execute(create_table_query)
        print(f"üõ†Ô∏è B·∫£ng '{table_name}' ƒë√£ s·∫µn s√†ng.")

        # Ch√®n d·ªØ li·ªáu v√†o b·∫£ng
        for row in data:
            values = [row[col].strip() if row[col] else None for col in columns]
            insert_query = f"""
                INSERT INTO {table_name} ({', '.join([f'"{col}"' for col in columns])})
                VALUES ({', '.join(['%s'] * len(values))});
            """
            cur.execute(insert_query, values)

        conn.commit()
        print(f"‚úÖ Nh·∫≠p th√†nh c√¥ng {len(data)} d√≤ng v√†o b·∫£ng '{table_name}'.")

    except Exception as error:
        print('‚ùå L·ªói:', error)

    finally:
        cur.close()
        conn.close()
        print('üîå ƒê√£ ng·∫Øt k·∫øt n·ªëi v·ªõi PostgreSQL.')

# Ch·∫°y ch∆∞∆°ng tr√¨nh
table_name = 'cleaned_data'
import_csv_to_postgres(table_name)
